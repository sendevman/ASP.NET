Done
- Domain driven design infrastructure
  - Entities
  - Repositories
  - Services
  - Unit of work
- ORM integration
  - Fluent mapping
- Database migrations
- Dependency Injection
  - Bootstrapping
  - Web API
  - Log4Net integration and configuration

-------------------------------------------------------------------------------------------------

Fixes:
- Check if there is a better way to register WebAPI to Castle Windsor.
- Implement best practices for guard clauses

Improvements:
- Localization

TODO:
- Make auto mapping system easier to use and standard to implement!
- Exception handling in Controllers and ApiControllers
- Make authentication & authorization system works with controllers and web api controllers
- Make user management system
- Make role management system
- JS&CSS Minimization and bundle (best practices!)
- Usage logging (detailed auditing)

--------------------------

Authorization
- Anonymous pages -> can see public pages
- Application pages -> can use application
- Administration pages -> can change site behaivour

--------------------------
PAGES
- CLOUD Administrating 
  - Pages those are over tenant accounts and to manage account system etc.. (authenticated & authorized)
    - ex: list of tenant accounts page
  - public pages (authenticated but not authorized)
    - ex: Pages to create tenant accounts by logged in users!
  - anaonymous pages (not authenticated)
    - ex: Pages those describes the system to all internet users
- APPLICATIN Pages (An Tenant account perspective) (can be entered by a subdomain or sub-folder (www.ABC.com/companyname or companyname.ABC.com?)
  - Pages to use and manage the application (authenticated & authorized)
    - ex: user authorization page, a page to use application
  - public pages (authenticated but not authorized)
    - pages those are seen by all logged in tenant users
  - anaonymous pages (not authenticated)
    - Pages those describes the system to all internet users

Membership models
- To be a member of CLOUD (to create an tenant account)
  - Private membership (can only added by administrator of the application (tenant account))
  - Sign up by invitation (authorized users of a tenant account can send invitations).
  - Sign up publicly
    - With admin confirmation
	- With email confirmation
	- Without any confirmation
- To be a member of an APPLICATION (Tenant account)
  - Private membership (can only added by administrator of the application (tenant account))
  - Sign up by invitation (authorized users of tenant can send invitations).
  - Sign up publicly
    - With admin confirmation
	- With email confirmation
	- Without any confirmation

ROLES
- Cloud roles (authorization templates) -> cloudadmin user is a special user!
- Application roles (authorization templates) -> appadmin user = Tenant account owner is a special user!


----------------------------
- Cloud or Not Cloud option! If we don't want to cloud, we can use the default single tenant (application)

????:
- Windows single sign on support?